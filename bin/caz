#!/bin/bash

VERSION="1.0.0"

# Show usage
show_usage() {
    echo "Clean .DS_Store files and create ZIP archive"
    echo "Version: $VERSION"
    echo ""
    echo "Usage: caz [options] [directory path] [archive name]"
    echo ""
    echo "Options:"
    echo "  -h, --help     Show help information"
    echo "  -v, --version  Show version information"
    echo ""
    echo "Examples:"
    echo "  caz                         # Compress current directory, use directory name as archive name"
    echo "  caz ./                      # Same as above"
    echo "  caz /path/to/dir            # Compress specified directory, use directory name as archive name"
    echo "  caz ./ myarchive.zip        # Compress current directory, specify archive name as myarchive.zip"
    echo "  caz /path/to/dir custom.zip # Compress specified directory, specify archive name as custom.zip"
    exit 0
}

# Show version
show_version() {
    echo "caz version $VERSION"
    exit 0
}

# Handle help and version parameters
if [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
    show_usage
elif [[ "$1" == "-v" ]] || [[ "$1" == "--version" ]]; then
    show_version
fi

# Error handling
set -e

# Parameter processing
TARGET_DIR="${1:-.}"
# Get absolute path of target directory
TARGET_DIR=$(realpath "$TARGET_DIR")
# Get target directory name
DIR_NAME=$(basename "$TARGET_DIR")

# Determine archive name
if [ -n "$2" ]; then
    # If a second parameter is provided, use it as the archive name
    ZIP_NAME="$2"
    # If the archive name does not end with .zip, add it
    [[ "$ZIP_NAME" != *.zip ]] && ZIP_NAME="${ZIP_NAME}.zip"
else
    # Otherwise, use the directory name
    ZIP_NAME="${DIR_NAME}.zip"
fi

# Check if target directory exists
if [ ! -d "$TARGET_DIR" ]; then
    echo "Error: Directory '$TARGET_DIR' does not exist"
    show_usage
fi

# Change to target directory
cd "$TARGET_DIR"

# Delete all .DS_Store files (silent mode)
find . -name ".DS_Store" -delete 2>/dev/null

# Create zip file, hide detailed output
if zip -rq "$ZIP_NAME" . -x "*.zip" 2>/dev/null; then
    echo "✓ Created: $ZIP_NAME"
else
    echo "✗ Archive creation failed"
    exit 1
fi

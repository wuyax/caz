#!/bin/bash

VERSION="1.0.0"

# Show usage
show_usage() {
    echo "Clean .DS_Store files and create ZIP archive"
    echo "Version: $VERSION"
    echo ""
    echo "Usage: caz [options] [directory path] [archive name]"
    echo ""
    echo "Options:"
    echo "  -h, --help     Show help information"
    echo "  -v, --version  Show version information"
    echo "  -r, --root     Keep root directory in archive"
    echo ""
    echo "Examples:"
    echo "  caz                         # Compress current directory contents only"
    echo "  caz -r                      # Compress including the root directory"
    echo "  caz -r /path/to/dir         # Compress specified directory, keeping root directory"
    echo "  caz ./ myarchive.zip        # Compress current directory contents only"
    echo "  caz -r ./ myarchive.zip     # Compress current directory, keeping root directory"
    exit 0
}

# Show version
show_version() {
    echo "caz version $VERSION"
    exit 0
}

# Add root directory flag
KEEP_ROOT=false

# Handle parameters
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_usage
            ;;
        -v|--version)
            show_version
            ;;
        -r|--root)
            KEEP_ROOT=true
            shift
            ;;
        *)
            if [ -z "$TARGET_DIR" ]; then
                TARGET_DIR="$1"
            elif [ -z "$ZIP_NAME" ]; then
                ZIP_NAME="$1"
            fi
            shift
            ;;
    esac
done

# Set default target directory if not specified
TARGET_DIR="${TARGET_DIR:-.}"
# Get absolute path of target directory
TARGET_DIR=$(realpath "$TARGET_DIR")
# Get target directory name
DIR_NAME=$(basename "$TARGET_DIR")

# Determine archive name
if [ -n "$ZIP_NAME" ]; then
    # If archive name is provided, use it
    [[ "$ZIP_NAME" != *.zip ]] && ZIP_NAME="${ZIP_NAME}.zip"
else
    # Otherwise, use the directory name
    ZIP_NAME="${DIR_NAME}.zip"
fi

# Check if target directory exists
if [ ! -d "$TARGET_DIR" ]; then
    echo "Error: Directory '$TARGET_DIR' does not exist"
    show_usage
fi

# Ensure ZIP_NAME doesn't contain path traversal
if [[ "$ZIP_NAME" == *"/"* ]]; then
    echo "Error: Archive name cannot contain path separators"
    exit 1
fi

# Delete .DS_Store files only within the target directory
find "$TARGET_DIR" -name ".DS_Store" -delete 2>/dev/null

# Create zip file based on root directory preference
if [ "$KEEP_ROOT" = true ]; then
    # Change to parent directory and include root directory in zip
    cd "$(dirname "$TARGET_DIR")"
    BASE_NAME=$(basename "$TARGET_DIR")
    # Ensure we only zip the target directory
    if zip -rq "$TARGET_DIR/$ZIP_NAME" "$BASE_NAME" -x "*.zip" 2>/dev/null; then
        echo "✓ Created: $ZIP_NAME (including root directory)"
    else
        echo "✗ Archive creation failed"
        exit 1
    fi
else
    # Original behavior: change to target directory and zip contents
    cd "$TARGET_DIR"
    if zip -rq "$ZIP_NAME" . -x "*.zip" 2>/dev/null; then
        echo "✓ Created: $ZIP_NAME"
    else
        echo "✗ Archive creation failed"
        exit 1
    fi
fi
